// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto.App.Persistencia;

namespace Proyecto.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proyecto.App.Dominio.Apellidos", b =>
                {
                    b.Property<int>("IdApellidos")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdApellidos");

                    b.ToTable("apellidos");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Cuenta", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IdCuenta");

                    b.ToTable("cuenta");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoVivienda")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdDireccion");

                    b.ToTable("direccion");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Email", b =>
                {
                    b.Property<int>("CodEmail")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodEmail");

                    b.ToTable("email");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.EmailOperador", b =>
                {
                    b.Property<int>("IdEmaOper")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CuentaIdCuenta")
                        .HasColumnType("int");

                    b.Property<int?>("EmailCodEmail")
                        .HasColumnType("int");

                    b.Property<int?>("OperadorIdCodOperador")
                        .HasColumnType("int");

                    b.HasKey("IdEmaOper");

                    b.HasIndex("CuentaIdCuenta");

                    b.HasIndex("EmailCodEmail");

                    b.HasIndex("OperadorIdCodOperador");

                    b.ToTable("emailOperador");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdGenero");

                    b.ToTable("genero");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Nombres", b =>
                {
                    b.Property<int>("IdNombres")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdNombres");

                    b.ToTable("nombres");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Operador", b =>
                {
                    b.Property<int>("IdCodOperador")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombOperador")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdCodOperador");

                    b.ToTable("operador");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.RH", b =>
                {
                    b.Property<int>("IdRh")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IdRh");

                    b.ToTable("rh");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Telefono", b =>
                {
                    b.Property<int>("IdTelefono")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CuentaIdCuenta")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdTelefono");

                    b.HasIndex("CuentaIdCuenta");

                    b.ToTable("telefono");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.TipoDocumento", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("tipoDocumento");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioDireccion", b =>
                {
                    b.Property<int>("IdUsuarioDireccion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DireccionIdDireccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasMaxLength(5)
                        .HasColumnType("Date");

                    b.Property<int?>("UsuariosIdUsuarios")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioDireccion");

                    b.HasIndex("DireccionIdDireccion");

                    b.HasIndex("UsuariosIdUsuarios");

                    b.ToTable("usuarioDireccion");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioFuncionario", b =>
                {
                    b.Property<int>("IdUsuarioFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("AreaSucursal")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("Date");

                    b.Property<int?>("UsuariosIdUsuarios")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioFuncionario");

                    b.HasIndex("UsuariosIdUsuarios");

                    b.ToTable("usuarioFuncionario");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioJerarquia", b =>
                {
                    b.Property<int>("IdUsuarioJerarquia")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Jerarquia")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosIdUsuarios")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioJerarquia");

                    b.HasIndex("UsuariosIdUsuarios");

                    b.ToTable("usuarioJerarquia");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioTelefono", b =>
                {
                    b.Property<int>("Contador")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TelefonoIdTelefono")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosIdUsuarios")
                        .HasColumnType("int");

                    b.HasKey("Contador");

                    b.HasIndex("TelefonoIdTelefono");

                    b.HasIndex("UsuariosIdUsuarios");

                    b.ToTable("usuarioTelefono");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Usuarios", b =>
                {
                    b.Property<int>("IdUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GeneroIdGenero")
                        .HasColumnType("int");

                    b.Property<DateTime>("Nacimiento")
                        .HasColumnType("Date");

                    b.Property<int?>("RHIdRh")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDocumentoIdTipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarios");

                    b.HasIndex("GeneroIdGenero");

                    b.HasIndex("RHIdRh");

                    b.HasIndex("TipoDocumentoIdTipoDocumento");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuariosApellidos", b =>
                {
                    b.Property<int>("Contador")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApellidosIdApellidos")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosIdUsuarios")
                        .HasColumnType("int");

                    b.HasKey("Contador");

                    b.HasIndex("ApellidosIdApellidos");

                    b.HasIndex("UsuariosIdUsuarios");

                    b.ToTable("usuariosApellidos");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuariosEmail", b =>
                {
                    b.Property<int>("Contador")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Actual")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int>("Email")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int>("Fecha")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosIdUsuarios")
                        .HasColumnType("int");

                    b.HasKey("Contador");

                    b.HasIndex("UsuariosIdUsuarios");

                    b.ToTable("usuariosEmail");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuariosNombres", b =>
                {
                    b.Property<int>("IdUsuariosNombres")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NombresIdNombres")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosIdUsuarios")
                        .HasColumnType("int");

                    b.HasKey("IdUsuariosNombres");

                    b.HasIndex("NombresIdNombres");

                    b.HasIndex("UsuariosIdUsuarios");

                    b.ToTable("usuariosNombres");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.EmailOperador", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Cuenta", null)
                        .WithMany("EmailOperador")
                        .HasForeignKey("CuentaIdCuenta");

                    b.HasOne("Proyecto.App.Dominio.Email", null)
                        .WithMany("EmailOperador")
                        .HasForeignKey("EmailCodEmail");

                    b.HasOne("Proyecto.App.Dominio.Operador", null)
                        .WithMany("EmailOperador")
                        .HasForeignKey("OperadorIdCodOperador");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Telefono", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Cuenta", null)
                        .WithMany("IdTelefono")
                        .HasForeignKey("CuentaIdCuenta");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioDireccion", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Direccion", null)
                        .WithMany("IdUsuarioDireccion")
                        .HasForeignKey("DireccionIdDireccion");

                    b.HasOne("Proyecto.App.Dominio.Usuarios", null)
                        .WithMany("IdUsuarioDireccion")
                        .HasForeignKey("UsuariosIdUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioFuncionario", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Usuarios", null)
                        .WithMany("IdUsuarioFuncionario")
                        .HasForeignKey("UsuariosIdUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioJerarquia", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Usuarios", null)
                        .WithMany("IdUsuarioJerarquia")
                        .HasForeignKey("UsuariosIdUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuarioTelefono", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Telefono", null)
                        .WithMany("IdUsuarioTelefono")
                        .HasForeignKey("TelefonoIdTelefono");

                    b.HasOne("Proyecto.App.Dominio.Usuarios", null)
                        .WithMany("IdUsuarioTelefono")
                        .HasForeignKey("UsuariosIdUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Usuarios", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Genero", null)
                        .WithMany("idUsuarios")
                        .HasForeignKey("GeneroIdGenero");

                    b.HasOne("Proyecto.App.Dominio.RH", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("RHIdRh");

                    b.HasOne("Proyecto.App.Dominio.TipoDocumento", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoDocumentoIdTipoDocumento");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuariosApellidos", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Apellidos", null)
                        .WithMany("IdUsuariosApellidos")
                        .HasForeignKey("ApellidosIdApellidos");

                    b.HasOne("Proyecto.App.Dominio.Usuarios", null)
                        .WithMany("IdUsuariosApellidos")
                        .HasForeignKey("UsuariosIdUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuariosEmail", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Usuarios", null)
                        .WithMany("IdUsuariosEmail")
                        .HasForeignKey("UsuariosIdUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.UsuariosNombres", b =>
                {
                    b.HasOne("Proyecto.App.Dominio.Nombres", null)
                        .WithMany("idUsuariosNombres")
                        .HasForeignKey("NombresIdNombres");

                    b.HasOne("Proyecto.App.Dominio.Usuarios", null)
                        .WithMany("IdUsuariosNombres")
                        .HasForeignKey("UsuariosIdUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Apellidos", b =>
                {
                    b.Navigation("IdUsuariosApellidos");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Cuenta", b =>
                {
                    b.Navigation("EmailOperador");

                    b.Navigation("IdTelefono");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Direccion", b =>
                {
                    b.Navigation("IdUsuarioDireccion");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Email", b =>
                {
                    b.Navigation("EmailOperador");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Genero", b =>
                {
                    b.Navigation("idUsuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Nombres", b =>
                {
                    b.Navigation("idUsuariosNombres");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Operador", b =>
                {
                    b.Navigation("EmailOperador");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.RH", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Telefono", b =>
                {
                    b.Navigation("IdUsuarioTelefono");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.TipoDocumento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Proyecto.App.Dominio.Usuarios", b =>
                {
                    b.Navigation("IdUsuarioDireccion");

                    b.Navigation("IdUsuarioFuncionario");

                    b.Navigation("IdUsuarioJerarquia");

                    b.Navigation("IdUsuariosApellidos");

                    b.Navigation("IdUsuariosEmail");

                    b.Navigation("IdUsuariosNombres");

                    b.Navigation("IdUsuarioTelefono");
                });
#pragma warning restore 612, 618
        }
    }
}
